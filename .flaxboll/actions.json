{"1757955343520":{"actionType":"saveAll","createdAt":"1757955343520","actionID":"1757955343520","userID":"#TEMP","path":"system.capsules.7a92f4fe-4244-4a81-8768-cd761c82f76f.capsUseCodeInfo.capsUseInputs.sss_custom_caps-0.capsIptTxtValue","oldValue":"() => {\n  const storage = getStorage();\n\n  // FunÃ§Ã£o async interna\n  const loadProductImages = async () => {\n    const listRef = ref(storage, \"images/\");\n    const res = await listAll(listRef);\n\n    // Pegar os links acessÃ­veis\n    const urls = await Promise.all(\n      res.items.map((item) => getDownloadURL(item))\n    );\n\n    console.log(\"Imagens:\", urls);\n\n    // Salvar em uma variÃ¡vel do Flaxboll\n    tools.functions.setVar({\n      args: \"\",\n      pass: {\n        keyPath: [\"sc.a3.productImagesOptions\"],\n        value: urls,\n      },\n    });\n  };\n\n  // ðŸ”¹ Chamar a funÃ§Ã£o async\n  loadProductImages().catch((err) =>\n    console.error(\"Erro ao carregar imagens:\", err)\n  );\n};\n","newValue":"() => {\n  const storage = getStorage();\n\n  // FunÃ§Ã£o async interna\n  const loadProductImages = async () => {\n    const listRef = ref(storage, \"images/\");\n    const res = await listAll(listRef);\n\n    // Pegar os links acessÃ­veis\n    const urls = await Promise.all(\n      res.items.map((item) => getDownloadURL(item))\n    );\n\n    console.log(\"Imagens:\", urls);\n\n    // Salvar em uma variÃ¡vel do Flaxboll\n    tools.functions.setVar({\n      args: \"\",\n      pass: {\n        keyPath: [\"sc.a3.productImagesOptions\"],\n        value: urls,\n      },\n    });\n  };\n\n  // Chamar a funÃ§Ã£o async\n  loadProductImages().catch((err) =>\n    console.error(\"Erro ao carregar imagens:\", err)\n  );\n};\n"}}