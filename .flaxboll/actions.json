{"1757694749150":{"actionType":"saveAll","createdAt":"1757694749150","actionID":"1757694749150","userID":"#TEMP","path":"system.capsules.a7a87f20-1901-40de-92cc-1a671040d7ec.capsUseCodeInfo.capsUseInputs.sss_custom_caps-0.capsIptTxtValue","oldValue":"(callback) => {\n  // Remove espaços\n  let newValue = callback.replace(/\\s+/g, \"\");\n\n  // Permitir apenas letras, números, @, ponto, hífen e underscore\n  newValue = newValue.replace(/[^a-zA-Z0-9@._-]/g, \"\");\n\n  // Atualizar a variável no Flaxboll\n  tools.functions.setVar({\n    args: \"\",\n    pass: {\n      keyPath: [\"sc.a0.login.forms.email\"],\n      value: newValue\n\t\t}\n\t\t\nconst email = tools.getCtData(\"sc.a0.login.forms.email\") || \"\";\n\n  // Regex simples para validar email\n  const isValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(sc.a0.login.forms.email);\n\n  if (!isValid) {\n    console.log(\"Email inválido!\");\n    return;\n  }\n\n  console.log(\"Email válido, continuar login:\", email);\n  // ... seguir fluxo de login\n\n  });\n}\n","newValue":"(callback) => {\n  // Remove espaços\n  let newValue = callback.replace(/\\s+/g, \"\");\n\n  // Permitir apenas letras, números, @, ponto, hífen e underscore\n  newValue = newValue.replace(/[^a-zA-Z0-9@._-]/g, \"\");\n\n  // Atualizar a variável no Flaxboll\n  tools.functions.setVar({\n    args: \"\",\n    pass: {\n      keyPath: [\"sc.a0.login.forms.email\"],\n      value: newValue\n\t\t}\n\t\t\n\n  // Regex simples para validar email\n  const isValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(sc.a0.login.forms.email);\n\n  if (!isValid) {\n    console.log(\"Email inválido!\");\n    return;\n  }\n\n  console.log(\"Email válido, continuar login:\", email);\n  // ... seguir fluxo de login\n\n  });\n}\n"}}