{"1756131997044":{"actionType":"saveAll","createdAt":"1756131997044","actionID":"1756131997044","userID":"#TEMP","path":"system.capsules.0e1ba4b0-147d-4499-abf4-4ed9d8debb14.capsUseCodeInfo.capsUseInputs.sss_freeValue-0.capsIptTxtValue","oldValue":"// ---------- import Local Tools\nimport { getDownloadURL, getStorage, ref, uploadBytes } from 'firebase/storage';\nimport { getCtData, testVarType } from '../../project';\n\ntype Tprops = {\n  args: any;\n  pass: { fbInit: any[]; arrFiles: any[]; arrFuncs: any[] };\n};\n\nexport const uploadFile = async (props: Tprops) => {\n  console.log('UPLOAD DE ARQUIVOS');\n  // ---------- set Props\n  const { args, pass } = props;\n  const { arrFiles, arrFuncs } = pass;\n  const fbInit = getCtData('all.temp.fireInit');\n  console.log({ fbInit, arrFiles, arrFuncs });\n\n  // -----------------------------\n  // -------- set Firestore Call 1\n  // -----------------------------\n  const storage = getStorage(fbInit);\n  console.log({ storage });\n\n  // ------ read Data\n  //   let dataToUpdate: any = {};\n  //   const newPath = arrPathData.map(i => {\n  //     const varValue = testVarType(i, args);\n  //     return varValue;\n  //   });\n  //   dataToUpdate = getCtData(newPath.join('.'));\n\n  //   const objData = arrFiles[0];\n  //   console.log({ objData });\n\n  let arrData: any = [];\n  console.log({ arrData, arrFiles });\n\n  const newPath = arrFiles.map(i => {\n    console.log({ i });\n    const varValue = testVarType(i, args);\n    return varValue;\n  });\n  console.log({ newPath });\n\n  arrData = [...getCtData(newPath.join('.'))];\n\n  console.log({ arrData });\n\n  arrData &&\n    arrData.forEach(async (currData: any, idx: number) => {\n      console.log('INIT LOOP UPLOAD');\n      const time = Date.now().toString();\n      const strRefFile = ref(storage, `images/` + time + currData.name);\n      console.log({ strRefFile });\n      const file = arrData.output[idx];\n      console.log({ file });\n      await uploadBytes(strRefFile, file);\n\n      // ---------- set Return Functions\n      const firestoreURL = await getDownloadURL(strRefFile);\n      console.log({ firestoreURL });\n\n      for (const currFunc of arrFuncs) await currFunc(args, firestoreURL, idx);\n    });\n};\n","newValue":"// ---------- import Local Tools\nimport { getDownloadURL, getStorage, ref, uploadBytes } from 'firebase/storage';\nimport { getCtData, testVarType } from '../../project';\n\ntype Tprops = {\n  args: any;\n  pass: { fbInit: any[]; arrFiles: any[]; arrFuncs: any[] };\n};\n\nexport const uploadFileTool = async (props: Tprops) => {\n  console.log('UPLOAD DE ARQUIVOS');\n  // ---------- set Props\n  const { args, pass } = props;\n  const { arrFiles, arrFuncs } = pass;\n  const fbInit = getCtData('all.temp.fireInit');\n  console.log({ fbInit, arrFiles, arrFuncs });\n\n  // -----------------------------\n  // -------- set Firestore Call 1\n  // -----------------------------\n  const storage = getStorage(fbInit);\n  console.log({ storage });\n\n  // ------ read Data\n  //   let dataToUpdate: any = {};\n  //   const newPath = arrPathData.map(i => {\n  //     const varValue = testVarType(i, args);\n  //     return varValue;\n  //   });\n  //   dataToUpdate = getCtData(newPath.join('.'));\n\n  //   const objData = arrFiles[0];\n  //   console.log({ objData });\n\n  let arrData: any = [];\n  console.log({ arrData, arrFiles });\n\n  const newPath = arrFiles.map(i => {\n    console.log({ i });\n    const varValue = testVarType(i, args);\n    return varValue;\n  });\n  console.log({ newPath });\n\n  arrData = [...getCtData(newPath.join('.'))];\n\n  console.log({ arrData });\n\n  arrData &&\n    arrData.forEach(async (currData: any, idx: number) => {\n      console.log('INIT LOOP UPLOAD');\n      const time = Date.now().toString();\n      const strRefFile = ref(storage, `images/` + time + currData.name);\n      console.log({ strRefFile });\n      const file = arrData.output[idx];\n      console.log({ file });\n      await uploadBytes(strRefFile, file);\n\n      // ---------- set Return Functions\n      const firestoreURL = await getDownloadURL(strRefFile);\n      console.log({ firestoreURL });\n\n      for (const currFunc of arrFuncs) await currFunc(args, firestoreURL, idx);\n    });\n};\n"}}