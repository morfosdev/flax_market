{"1756479432745":{"actionType":"saveAll","createdAt":"1756479432745","actionID":"1756479432745","userID":"#TEMP","path":"system.capsules.39669f77-68f1-49fc-ada7-c8633b868afd.capsUseCodeInfo.capsUseDescription.en","oldValue":"{\nwidth: '242px',\nheight: '40px',\njustifyContent: 'initial',\nalignItems: 'center',\nborderRadius: 5,\nborderWidth: 1,\nborderColor: '#eee',\npaddingHorizontal: 10,\npaddingVertical: 5,\nflexDirection: 'row',\n}","newValue":"{\njustifyContent: 'initial',\nalignItems: 'center',\nflexDirection: 'row',\n}"},"1756479432746":{"actionType":"saveAll","createdAt":"1756479432746","actionID":"1756479432746","userID":"#TEMP","path":"system.capsules.601f77d6-dc04-48f5-aa75-03dbda348961.capsUseCodeInfo.capsUseInputs.sss_freeValue-0.capsIptTxtValue","oldValue":"// ---------- import Local Tools\nimport { getFirestore, doc, updateDoc, Timestamp } from 'firebase/firestore';\nimport { getCtData, testVarType } from '../../project';\n\nexport const css1 =\n  'color: #ffb73b; background-color: black; font-size: 11px; padding: 2px 6px; border-radius: 3px';\nexport const css2 =\n  'color: black; background-color: #ffb73b; font-size: 10px; padding: 2px 6px; border-radius: 3px';\n\ntype Tprops = {\n  args: any;\n  pass: {\n    arrRefStrings: string[];\n    arrPathData: string[];\n    arrFuncs: any[];\n  };\n};\n\nexport const updateDocTool = async (props: Tprops) => {\n  // ---------- set Props\n  const { args, pass } = props;\n  const { arrRefStrings, arrPathData, arrFuncs } = pass;\n\n  // -----------------------------\n  // ---------- set Firestore Call\n  // -----------------------------\n  const newArrStringRefs = arrRefStrings.map(i => {\n    const varValue = testVarType(i, args);\n    return varValue;\n  });\n\n  console.log('3', { newArrStringRefs });\n\n  const fbInit = getCtData('all.temp.fireInit');\n  console.log(fbInit);\n  const fireInit: any = getFirestore(fbInit);\n  console.log({ arrRefStrings });\n  const refColl = doc(fireInit, ...newArrStringRefs);\n\n  // ------ check Data\n  if (!Array.isArray(arrRefStrings))\n    return console.log(\n      'arrRefStrings needs to be a string array',\n      arrRefStrings,\n    );\n\n  // ------ read Data\n  let dataToUpdate: any = {};\n  const newPath = arrPathData.map(i => {\n    const varValue = testVarType(i, args);\n    return varValue;\n  });\n  const condObj = typeof newPath === 'object';\n  const condString = typeof newPath === 'string';\n\n  if (condString) dataToUpdate = getCtData(newPath.join('')) ?? {};\n  if (condObj) dataToUpdate = newPath ?? {};\n\n  console.log({ newPath, dataToUpdate });\n\n  const dateNow = Timestamp.now();\n  console.log({ dateNow });\n  // ------ add date update\n  dataToUpdate.updatedAt = Timestamp.now();\n\n  await updateDoc(refColl, dataToUpdate).catch(err =>\n    console.log('Erro do updateDoc', { err }),\n  );\n\n  // ---------- set Get Value Functions\n  for (const currFunc of arrFuncs) await currFunc(dataToUpdate, args);\n\n  console.log('%cupdateDoc ok', css1);\n  console.log('%cReferencia do Documento', css2, {\n    newArrStringRefs,\n    dataToUpdate,\n  });\n\n  return dataToUpdate;\n};\n","newValue":"// ---------- import Local Tools\nimport { getFirestore, doc, updateDoc, Timestamp } from 'firebase/firestore';\nimport { getCtData, testVarType } from '../../project';\n\nexport const css1 =\n  'color: #ffb73b; background-color: black; font-size: 11px; padding: 2px 6px; border-radius: 3px';\nexport const css2 =\n  'color: black; background-color: #ffb73b; font-size: 10px; padding: 2px 6px; border-radius: 3px';\n\ntype Tprops = {\n  args: any;\n  pass: {\n    arrRefStrings: string[];\n    arrPathData: string[];\n    arrFuncs: any[];\n  };\n};\n\nexport const updateDocTool = async (props: Tprops) => {\n  // ---------- set Props\n  const { args, pass } = props;\n  const { arrRefStrings, arrPathData, arrFuncs } = pass;\n\n  // -----------------------------\n  // ---------- set Firestore Call\n  // -----------------------------\n  const newArrStringRefs = arrRefStrings.map(i => {\n    const varValue = testVarType(i, args);\n    return varValue;\n  });\n\n  console.log('3', { newArrStringRefs });\n\n  const fbInit = getCtData('all.temp.fireInit');\n  console.log(fbInit);\n  const fireInit: any = getFirestore(fbInit);\n  console.log({ arrRefStrings });\n  const refColl = doc(fireInit, ...newArrStringRefs);\n\n  // ------ check Data\n  if (!Array.isArray(arrRefStrings))\n    return console.log(\n      'arrRefStrings needs to be a string array',\n      arrRefStrings,\n    );\n\n  // ------ read Data\n  let dataToUpdate: any = {};\n  const newPath = arrPathData.map(i => {\n    const varValue = testVarType(i, args);\n    return varValue;\n  });\n  const condObj = typeof newPath === 'object';\n  const condString = typeof newPath === 'string';\n\n  if (condString) dataToUpdate = getCtData(newPath.join('')) ?? {};\n  if (condObj) dataToUpdate = newPath.flat() ?? {};\n\n  console.log({ newPath, dataToUpdate });\n\n  const dateNow = Timestamp.now();\n  console.log({ dateNow });\n  // ------ add date update\n  dataToUpdate.updatedAt = Timestamp.now();\n\n  await updateDoc(refColl, dataToUpdate).catch(err =>\n    console.log('Erro do updateDoc', { err }),\n  );\n\n  // ---------- set Get Value Functions\n  for (const currFunc of arrFuncs) await currFunc(dataToUpdate, args);\n\n  console.log('%cupdateDoc ok', css1);\n  console.log('%cReferencia do Documento', css2, {\n    newArrStringRefs,\n    dataToUpdate,\n  });\n\n  return dataToUpdate;\n};\n"}}